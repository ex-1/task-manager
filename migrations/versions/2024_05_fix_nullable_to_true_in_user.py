"""fix nullable to true in user

Revision ID: 98eb214cc2de
Revises: a77ae162af6c
Create Date: 2024-05-20 08:39:42.878289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '98eb214cc2de'
down_revision: Union[str, None] = 'a77ae162af6c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('PassportData', 'passport_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.alter_column('PassportData', 'issue_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('PassportData', 'expiration_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('PassportData', 'place_of_issue',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('Users', 'avatar',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('Users', 'avatar',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('PassportData', 'place_of_issue',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('PassportData', 'expiration_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('PassportData', 'issue_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('PassportData', 'passport_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    # ### end Alembic commands ###
